const pswA = prompt('Paste the list of passwords in here:').split('\n') // Getting data and turning it into array by splitting it up by new lines
let counter1 = 0                        // Declaring counters for Part One and Part Two
let counter2 = 0        
for (i=0;i<pswA.length;i++) {           // Going through each entry in our array of passwords and corporate policies
    let valid1 =0                       // Redeclaring counter used for Part Two, goes back to 0 with every new entry
    let splt = pswA[i].split(' ')       // Splitting each entry by SPACE into 3 part: 1.) numbers, 2.) letter, 3.) password
    let min = splt[0].split('-')[0]     // Saving the first number (before '-')
    let max = splt[0].split('-')[1]     // Saving the second number (after '-')
    let letter = splt[1].slice(0,1)     // Saving the letter that comes after the numbers, and discarding cahracter ':'
    let pswdS = splt[2];                // Saving the actual password from the end of each entry
    if (((pswdS.split(letter).length -1) >= min) && ((pswdS.split(letter).length -1) <= max)) // Combo of split() and .length to calculate how many times character appears in string, for Part One
        {counter1++;}                   // Increasing counter for Part One
    if (pswdS.charAt(min-1) === letter) // Fix 'no concept of index zero' by using -1 to get correct position of letter
        {valid1++}                      // If first letter matches, increase valid1 by one
    if (pswdS.charAt(max-1) === letter) 
        {valid1++}                      // If second letter matches, increase valid1 by one
    if (valid1 === 1)                   // valid1 needs to be 1 at this point to increase counter, since exactly ONE letter needs to match
        {counter2++}
}
alert(`There are: \n${counter1} valid passwords for Part One \n${counter2} valid passwords for Part Two`)
